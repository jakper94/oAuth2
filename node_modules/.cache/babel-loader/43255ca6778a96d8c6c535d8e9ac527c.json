{"ast":null,"code":"var _jsxFileName = \"/Users/jakobpersson/Documents/work/school/Teknik-for-sociala-medier/oAuth2/src/components/useDatabase/getFromDatabase.js\";\nimport React, { useState, useEffect } from 'react';\nimport firebase from '../../firebase-config';\nimport TimeStamp from 'react-timestamp';\n\nfunction GetInfoFromUser(uid) {\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const date = new Date().getTime();\n    const timestamp = Math.floor(date / 1000);\n    const unsubscribe = firebase.firestore().collection('users').where('userID', '==', uid).onSnapshot(snapshot => {\n      const newUsers = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setUsers(newUsers);\n    });\n    users.map(user => firebase.firestore().collection('users').doc(user.id).update({\n      timestamp\n    }));\n    console.log('time', timestamp);\n    return () => unsubscribe();\n  }, []);\n  return users;\n}\n\nconst GetFromDatabase = ({\n  userUid\n}) => {\n  console.log(userUid);\n  const users = GetInfoFromUser(userUid);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"div\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, user.id, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Senast inloggad: \", /*#__PURE__*/React.createElement(TimeStamp, {\n    date: user.timestamp,\n    options: {\n      includeDay: true,\n      twentyFourHour: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 35\n    }\n  }), \" \"), user.timestamp)));\n};\n\nexport default GetFromDatabase;","map":{"version":3,"sources":["/Users/jakobpersson/Documents/work/school/Teknik-for-sociala-medier/oAuth2/src/components/useDatabase/getFromDatabase.js"],"names":["React","useState","useEffect","firebase","TimeStamp","GetInfoFromUser","uid","users","setUsers","date","Date","getTime","timestamp","Math","floor","unsubscribe","firestore","collection","where","onSnapshot","snapshot","newUsers","docs","map","doc","id","data","user","update","console","log","GetFromDatabase","userUid","includeDay","twentyFourHour"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAGA,SAASC,eAAT,CAAyBC,GAAzB,EAA8B;AAC1B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMO,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAb;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAC,IAAhB,CAAlB;AAEA,UAAMM,WAAW,GAAGZ,QAAQ,CAC3Ba,SADmB,GAEfC,UAFe,CAEJ,OAFI,EAGfC,KAHe,CAGT,QAHS,EAGC,IAHD,EAGOZ,GAHP,EAIfa,UAJe,CAIHC,QAAD,IAAY;AACxB,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAS;AACxCC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADgC;AAExC,WAAGD,GAAG,CAACE,IAAJ;AAFqC,OAAT,CAAlB,CAAjB;AAIAlB,MAAAA,QAAQ,CAACa,QAAD,CAAR;AACH,KAVmB,CAApB;AAYAd,IAAAA,KAAK,CAACgB,GAAN,CAAUI,IAAI,IAEVxB,QAAQ,CAACa,SAAT,GACCC,UADD,CACY,OADZ,EACqBO,GADrB,CACyBG,IAAI,CAACF,EAD9B,EAECG,MAFD,CAEQ;AACPhB,MAAAA;AADO,KAFR,CAFJ;AAQAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBlB,SAApB;AAGA,WAAO,MAAMG,WAAW,EAAxB;AAGH,GA9BQ,EA8BP,EA9BO,CAAT;AAgCI,SAAOR,KAAP;AACP;;AAED,MAAMwB,eAAe,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAChCH,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,QAAMzB,KAAK,GAAGF,eAAe,CAAC2B,OAAD,CAA7B;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKzB,KAAK,CAACgB,GAAN,CAAUI,IAAI,iBACf;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACF,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,IAAI,CAACF,EADV,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAoB,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEE,IAAI,CAACf,SAAtB;AAAiC,IAAA,OAAO,EAAE;AAAEqB,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,cAAc,EAAE;AAApC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,MAFJ,EAGKP,IAAI,CAACf,SAHV,CADC,CADL,CADF;AAWH,CAjBD;;AAkBA,eAAemB,eAAf","sourcesContent":["import React, {useState, useEffect }from 'react'\nimport firebase from '../../firebase-config'\nimport TimeStamp from 'react-timestamp'\n\n\nfunction GetInfoFromUser(uid) {\n    const [users,setUsers] = useState([]);     \n        \n    useEffect(()=>{\n        const date = new Date().getTime();\n        const timestamp = Math.floor(date/1000)\n        \n        const unsubscribe = firebase\n        .firestore()\n            .collection('users')\n            .where('userID', '==', uid)\n            .onSnapshot((snapshot)=>{\n            const newUsers = snapshot.docs.map((doc)=> ({\n                id: doc.id,\n                ...doc.data()\n            }))\n            setUsers(newUsers);\n        })\n\n        users.map(user =>(\n        \n            firebase.firestore()\n            .collection('users').doc(user.id)\n            .update({\n             timestamp\n            })\n        ))\n        console.log('time', timestamp)\n    \n\n        return () => unsubscribe()\n        \n        \n    },[])\n    \n        return users;\n}\n\nconst GetFromDatabase =({userUid})=>{\n    console.log(userUid)\n    const users = GetInfoFromUser(userUid);\n    \n        \n    \n    return (\n      <div>\n          {users.map(user=>(\n          <div key={user.id}> \n              {user.id}\n              <p>Senast inloggad: <TimeStamp date={user.timestamp} options={{ includeDay: true, twentyFourHour: true }}/> </p>\n              {user.timestamp}\n          </div>  \n          ))}\n      </div>\n    )\n}\nexport default GetFromDatabase"]},"metadata":{},"sourceType":"module"}