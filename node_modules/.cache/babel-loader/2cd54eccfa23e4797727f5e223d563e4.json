{"ast":null,"code":"var _jsxFileName = \"/Users/jakobpersson/Documents/work/school/Teknik-for-sociala-medier/oAuth2/src/components/useDatabase/getFromDatabase.js\";\nimport React, { useState, useEffect } from 'react';\nimport firebase from '../../firebase-config';\nimport TimeStamp from 'react-timestamp';\n\nfunction addUser(uid) {\n  firebase.firestore().collection('users').doc(uid).get().then(doc => {\n    if (doc.exists) {\n      console.log('user exist');\n    } else {\n      console.log('not existing');\n    }\n  });\n}\n\nfunction GetInfoFromUser(uid) {\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const unsubscribe = firebase.firestore().collection('users').where('userID', '==', uid).onSnapshot(snapshot => {\n      const newUsers = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      console.log('NEW', newUsers);\n      setUsers(newUsers);\n    });\n    return () => unsubscribe();\n  }, []);\n  return users;\n}\n\nfunction updateUser(inputedUser) {\n  const date = new Date().getTime();\n  const timestamp = Math.floor(date / 1000);\n  console.log('time', timestamp); //updates the timestamp in the database  fCvwAqy3yo4kpxToCY0H'\n\n  inputedUser.map(iuser => firebase.firestore().collection('users').doc(iuser.id).update({\n    timestamp\n  }));\n}\n\nconst GetFromDatabase = ({\n  userUid\n}) => {\n  console.log(userUid);\n  const users = GetInfoFromUser(userUid);\n  updateUser(users);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"div\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, user.id, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Senast inloggad: \", /*#__PURE__*/React.createElement(TimeStamp, {\n    date: user.timestamp,\n    options: {\n      includeDay: true,\n      twentyFourHour: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 35\n    }\n  }), \" \"), user.timestamp)));\n};\n\nexport default GetFromDatabase;","map":{"version":3,"sources":["/Users/jakobpersson/Documents/work/school/Teknik-for-sociala-medier/oAuth2/src/components/useDatabase/getFromDatabase.js"],"names":["React","useState","useEffect","firebase","TimeStamp","addUser","uid","firestore","collection","doc","get","then","exists","console","log","GetInfoFromUser","users","setUsers","unsubscribe","where","onSnapshot","snapshot","newUsers","docs","map","id","data","updateUser","inputedUser","date","Date","getTime","timestamp","Math","floor","iuser","update","GetFromDatabase","userUid","user","includeDay","twentyFourHour"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAqB;AACjBH,EAAAA,QAAQ,CACHI,SADL,GAEKC,UAFL,CAEgB,OAFhB,EAGKC,GAHL,CAGSH,GAHT,EAGcI,GAHd,GAGoBC,IAHpB,CAIQF,GAAG,IAAI;AACP,QAAIA,GAAG,CAACG,MAAR,EAAgB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACC,KAFD,MAEM;AACFD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ,GAVL;AAYH;;AACD,SAASC,eAAT,CAAyBT,GAAzB,EAA8B;AAC1B,QAAM,CAACU,KAAD,EAAOC,QAAP,IAAmBhB,QAAQ,CAAC,EAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AAEV,UAAMgB,WAAW,GAAGf,QAAQ,CAC3BI,SADmB,GAEfC,UAFe,CAEJ,OAFI,EAGfW,KAHe,CAGT,QAHS,EAGC,IAHD,EAGOb,GAHP,EAIfc,UAJe,CAIHC,QAAD,IAAY;AACxB,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBf,GAAD,KAAS;AACxCgB,QAAAA,EAAE,EAAEhB,GAAG,CAACgB,EADgC;AAExC,WAAGhB,GAAG,CAACiB,IAAJ;AAFqC,OAAT,CAAlB,CAAjB;AAIAb,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBQ,QAAlB;AACAL,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,KAXmB,CAApB;AAiBA,WAAO,MAAMJ,WAAW,EAAxB;AAGH,GAtBQ,EAsBP,EAtBO,CAAT;AAwBI,SAAOF,KAAP;AACP;;AACD,SAASW,UAAT,CAAoBC,WAApB,EAAgC;AAE5B,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAb;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAC,IAAhB,CAAlB;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBkB,SAApB,EAJ4B,CAO1B;;AAEAJ,EAAAA,WAAW,CAACJ,GAAZ,CAAgBW,KAAK,IACnBhC,QAAQ,CAACI,SAAT,GACKC,UADL,CACgB,OADhB,EACyBC,GADzB,CAC6B0B,KAAK,CAACV,EADnC,EAEKW,MAFL,CAEY;AACPJ,IAAAA;AADO,GAFZ,CADF;AAOL;;AACD,MAAMK,eAAe,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAEhCzB,EAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAZ;AACA,QAAMtB,KAAK,GAAGD,eAAe,CAACuB,OAAD,CAA7B;AACAX,EAAAA,UAAU,CAACX,KAAD,CAAV;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACQ,GAAN,CAAUe,IAAI,iBACf;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACd,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKc,IAAI,CAACd,EADV,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAoB,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEc,IAAI,CAACP,SAAtB;AAAiC,IAAA,OAAO,EAAE;AAAEQ,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,cAAc,EAAE;AAApC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,MAFJ,EAGKF,IAAI,CAACP,SAHV,CADC,CADL,CADF;AAWH,CAlBD;;AAmBA,eAAeK,eAAf","sourcesContent":["import React, {useState, useEffect }from 'react'\nimport firebase from '../../firebase-config'\nimport TimeStamp from 'react-timestamp'\n\nfunction addUser(uid){\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(uid).get().then(\n            doc => {\n            if (doc.exists) {\n            console.log('user exist')\n            } else{\n                console.log('not existing')\n            }\n        }\n        )\n}\nfunction GetInfoFromUser(uid) {\n    const [users,setUsers] = useState([]);     \n        \n    useEffect(()=>{\n        \n        const unsubscribe = firebase\n        .firestore()\n            .collection('users')\n            .where('userID', '==', uid)\n            .onSnapshot((snapshot)=>{\n            const newUsers = snapshot.docs.map((doc)=> ({\n                id: doc.id,\n                ...doc.data()\n            }))\n            console.log('NEW',newUsers)\n            setUsers(newUsers);\n        })\n\n      \n    \n       \n\n        return () => unsubscribe()\n        \n        \n    },[])\n    \n        return users;\n}\nfunction updateUser(inputedUser){\n\n    const date = new Date().getTime();\n    const timestamp = Math.floor(date/1000)\n    console.log('time', timestamp)\n    \n \n      //updates the timestamp in the database  fCvwAqy3yo4kpxToCY0H'\n           \n      inputedUser.map(iuser=>(\n        firebase.firestore()\n            .collection('users').doc(iuser.id)\n            .update({\n             timestamp\n            })\n      ))\n}\nconst GetFromDatabase =({userUid})=>{\n    \n    console.log(userUid)\n    const users = GetInfoFromUser(userUid);\n    updateUser(users)\n        \n    \n    return (\n      <div>\n          {users.map(user=>(\n          <div key={user.id}> \n              {user.id}\n              <p>Senast inloggad: <TimeStamp date={user.timestamp} options={{ includeDay: true, twentyFourHour: true }}/> </p>\n              {user.timestamp}\n          </div>  \n          ))}\n      </div>\n    )\n}\nexport default GetFromDatabase"]},"metadata":{},"sourceType":"module"}